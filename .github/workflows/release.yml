# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    env:
      DENO_DIR: my_cache_directory
    steps:
      - name: Cache Deno dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ secrets.CACHE_VERSION }}-${{ hashFiles('deno.lock') }}

      - name: Setup repo
        uses: actions/checkout@v3

      - name: Setup Deno
        uses: denoland/setup-deno@v1.1.2
        #uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31  # v1.1.2
        with:
          deno-version: v1.x

      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      # - name: Verify formatting
      #   run: deno fmt --check
      
      #      TODO: Fix linting issues and run later
      #      - name: Run linter
      #        run: deno lint

      - name: Run tests
        run: deno test -A

      - name: Compile MAC
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          deno compile --allow-all main.ts --target aarch64-apple-darwin --output build/backtracking_mac_arm
          deno compile --allow-all main.ts --target x86_64-apple-darwin --output build/backtracking_mac_x64

      - name: Compile Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          deno compile --allow-all main.ts --output build/backtracking.exe

      - name: Compile Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          deno compile --allow-all main.ts --output build/backtracking_linux

      - uses: actions/upload-artifact@v3
        with:
          path: build/*

  make_release:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: "build"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/artifact/*
